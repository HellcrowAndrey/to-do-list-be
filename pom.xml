<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>to-do-list-be</groupId>
    <artifactId>to-do-list-be</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>
            <!--Modules dependency-->
            <dependency>
                <groupId>to-do-list-be</groupId>
                <artifactId>helper</artifactId>
                <version>${modules.version}</version>
            </dependency>
            <dependency>
                <groupId>to-do-list-be</groupId>
                <artifactId>data-access-object</artifactId>
                <version>${modules.version}</version>
            </dependency>
            <dependency>
                <groupId>to-do-list-be</groupId>
                <artifactId>utils</artifactId>
                <version>${modules.version}</version>
            </dependency>
            <!--Spring dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.web.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json.path}</version>
                <scope>test</scope>
            </dependency>
            <!--Include dependency-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${sl4g.logger}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--DB dependency-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${my-sql-version}</version>
            </dependency>
            <!--Test dependencies-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest-all.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${pover.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${pover.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4-rule</artifactId>
                <version>${pover.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-classloading-xstream</artifactId>
                <version>${pover.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-classloading-objenesis</artifactId>
                <version>${pover.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${junit.params.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>data-access-object</module>
        <module>client-api</module>
        <module>helper</module>
        <module>utils</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4-rule</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-classloading-xstream</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-classloading-objenesis</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <!--java version-->
        <java.version>1.8</java.version>
        <!--modules version-->
        <modules.version>1.0-SNAPSHOT</modules.version>
        <!--spring versions-->
        <spring.web.version>2.1.1.RELEASE</spring.web.version>
        <!--json-path-->
        <json.path>2.4.0</json.path>
        <!--Include dependency-->
        <sl4g.logger>1.7.25</sl4g.logger>
        <bcprov-jdk15on.version>1.51</bcprov-jdk15on.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <commons-validator.version>1.4.1</commons-validator.version>
        <!--DB dependency-->
        <my-sql-version>8.0.13</my-sql-version>
        <!--tests versions-->
        <junit.version>4.12</junit.version>
        <spring-test.version>5.0.9.RELEASE</spring-test.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <mockito.version>1.10.19</mockito.version>
        <pover.mock.version>1.7.4</pover.mock.version>
        <commons.version>2.4</commons.version>
        <junit.params.version>1.0.4</junit.params.version>
        <easymock.version>3.1</easymock.version>
        <!--plugins-->
        <buildToolsVersion>1.3</buildToolsVersion>
        <mavenCompilerPluginVersion>3.2</mavenCompilerPluginVersion>
        <licenseMavenPluginVersion>1.7</licenseMavenPluginVersion>
        <mavenDependencyPluginVersion>2.9</mavenDependencyPluginVersion>
        <mavenSourcePluginVersion>2.4</mavenSourcePluginVersion>
        <mavenJxrPluginVersion>3.0.0</mavenJxrPluginVersion>
        <checkstyle.config.location>properties/checkstyle-configuration.xml</checkstyle.config.location>
        <mavenCheckstylePluginVersion>3.0.0</mavenCheckstylePluginVersion>
        <findbugsMavenPluginVersion>3.0.0</findbugsMavenPluginVersion>
        <mavenPmdPluginVersion>3.5</mavenPmdPluginVersion>
        <taglistMavenPluginVersion>2.4</taglistMavenPluginVersion>
        <coberturaMavenPluginVersion>2.7</coberturaMavenPluginVersion>
        <mavenJavadocPluginVersion>2.10.1</mavenJavadocPluginVersion>
        <mavenSurefirePluginVersion>2.17</mavenSurefirePluginVersion>
        <mavenGpgPluginVersion>1.5</mavenGpgPluginVersion>
        <mavenProjecInfoReportsPluginVersion>2.9</mavenProjecInfoReportsPluginVersion>
        <mavenSitePluginVersion>3.4</mavenSitePluginVersion>
        <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
        <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>
        <maven-antrun-plugin>1.8</maven-antrun-plugin>
        <maven-surefire-plugin.version>2.18</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.17</maven-failsafe-plugin.version>
        <spotify.version>1.2.0</spotify.version>
    </properties>

    <build>
        <plugins>
            <!-- ===================================================================== -->
            <!-- Docker build                                                          -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${spotify.version}</version>
                <configuration>
                    <imageName>to-do-app</imageName>
                    <baseImage>java</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <!-- copy the service's jar file from target into the root directory of the image -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <!-- ===================================================================== -->
            <!-- Set the Java version (source and target)                              -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPluginVersion}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!-- ================================================================= -->
            <!-- Dependency plugin                                                 -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${mavenDependencyPluginVersion}</version>
                <executions>
                    <execution>
                        <id>dep-resolve</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>resolve</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>false</excludeTransitive>
                            <outputFile>${project.build.directory}/dep_current.txt</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>analyze-dep-mgt</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>analyze-dep-mgt</goal>
                        </goals>
                        <configuration>
                            <failBuild>true</failBuild>
                            <ignoreDirect>false</ignoreDirect>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dep-copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dep-src-copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <classifier>sources</classifier>
                            <outputDirectory>${project.build.directory}/dependency-sources</outputDirectory>
                            <stripVersion>true</stripVersion>
                            <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- ===================================================================== -->
            <!-- The JXR plugin provides cross-reference information for SCA plugins   -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${mavenJxrPluginVersion}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>jxr</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ===================================================================== -->
            <!-- SCA: checkstyle                                                       -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${mavenCheckstylePluginVersion}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.beiter.michael.util</groupId>
                        <artifactId>build-tools</artifactId>
                        <version>${buildToolsVersion}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <configuration>
                            <!--<configLocation>checkstyle.xml</configLocation>-->
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failOnViolation>false</failOnViolation>
                            <failsOnError>false</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ===================================================================== -->
            <!-- SCA: Findbugs                                                         -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugsMavenPluginVersion}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                    <failOnError>false</failOnError>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.beiter.michael.util</groupId>
                        <artifactId>build-tools</artifactId>
                        <version>${buildToolsVersion}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ================================================================= -->
            <!-- SCA: PMD                                                          -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${mavenPmdPluginVersion}</version>
                <configuration>
                    <!--<linkXref>true</linkXref>-->
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${java.version}</targetJdk>
                    <rulesets>
                        <ruleset>pmd-rules.xml</ruleset>
                    </rulesets>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.beiter.michael.util</groupId>
                        <artifactId>build-tools</artifactId>
                        <version>${buildToolsVersion}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>pmd</goal>
                            <goal>cpd</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ================================================================= -->
            <!-- Pack and attach sources                                           -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${mavenSourcePluginVersion}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ===================================================================== -->
            <!-- Build and attach Java docs                                             -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${mavenJavadocPluginVersion}</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <!-- Do not create test javadocs -->
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ===================================================================== -->
            <!-- Log4j configuration: http://wiki.apache.org/logging-log4j/UsefulCode  -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${mavenSurefirePluginVersion}</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>log4j.configuration</name>
                            <value>log4j.properties</value>
                        </property>
                    </systemProperties>
                    <argLine>-XX:-UseSplitVerifier -Xmx1024m -XX:MaxPermSize=512m</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.6</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- ===================================================================== -->
            <!-- The JXR plugin provides cross-reference information for SCA plugins   -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${mavenJxrPluginVersion}</version>
            </plugin>
            <!-- ===================================================================== -->
            <!-- SCA: checkstyle                                                       -->
            <!-- ===================================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${mavenCheckstylePluginVersion}</version>
                <configuration>
                    <!--<configLocation>${checkstyle.config.location}</configLocation>-->
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- ================================================================= -->
            <!-- SCA: Findbugs                                                     -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugsMavenPluginVersion}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <!-- ================================================================= -->
            <!-- SCA: PMD                                                          -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${mavenPmdPluginVersion}</version>
                <configuration>
                    <!--<linkXref>true</linkXref>-->
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <skipEmptyReport>false</skipEmptyReport>
                    <targetJdk>${java.version}</targetJdk>
                    <rulesets>
                        <ruleset>pmd-rules.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <!-- ================================================================= -->
            <!-- SCA: Tag reporting                                                -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${taglistMavenPluginVersion}</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Work items</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>fix</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@fix</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@fixme</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>fixme</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <!-- ================================================================= -->
            <!-- Configuration of Code Coverage analysis                           -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${coberturaMavenPluginVersion}</version>
            </plugin>
            <!-- ================================================================= -->
            <!-- Configuration of Java docs plugin                                 -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${mavenJavadocPluginVersion}</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <failOnError>false</failOnError>
                </configuration>
                <reportSets>
                    <reportSet>
                        <id>default</id>
                        <reports>
                            <!-- Do not create test javadocs -->
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- ================================================================= -->
            <!-- Configuration of Project Reporting plugin                         -->
            <!-- ================================================================= -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${mavenProjecInfoReportsPluginVersion}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>modules</report>
                            <report>dependency-info</report>
                            <report>issue-tracking</report>
                            <report>project-team</report>
                            <report>dependencies</report>
                            <report>dependency-management</report>
                            <report>dependency-convergence</report>
                            <report>license</report>
                            <report>scm</report>
                            <report>plugins</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <name>to-do-app</name>
    <description>This is to do list app. Save your marks in db and get this mark if its need</description>
    <url>http://github.com</url>
    <licenses>
        <license>
            <name>EPL 1.0</name>
            <url>http://opensource.org/licenses/EPL-1.0</url>
        </license>
    </licenses>
    <organization>
        <name>hell-crow</name>
        <url>http://github.com</url>
    </organization>
    <developers>
        <developer>
            <name>HellCrow</name>
            <email>hellcrow@gmail.com</email>
        </developer>
    </developers>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/openhab/static-code-analysis/issues</url>
    </issueManagement>
    <profiles>
        <profile>
            <id>realise</id>
            <build>
                <plugins>
                    <!-- ===================================================================== -->
                    <!-- Build and attach Java docs                                             -->
                    <!-- ===================================================================== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${mavenJavadocPluginVersion}</version>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                            <failOnError>true</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <!-- Do not create test java docs -->
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ===================================================================== -->
                    <!-- Site configuration                                                    -->
                    <!-- ===================================================================== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${mavenSitePluginVersion}</version>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${spotify.version}</version>
                        <configuration>
                            <imageName>${project.artifactId}</imageName>
                            <baseImage>java</baseImage>
                            <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                            <!-- copy the service's jar file from target into the root directory of the image -->
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker:remove</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>removeImage</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker:build</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>data-access-object</module>
                <module>client-api</module>
                <module>helper</module>
                <module>utils</module>
            </modules>
        </profile>
        <profile>
            <id>check-style</id>
            <build>
                <plugins>
                    <!-- ===================================================================== -->
                    <!-- SCA: checkstyle                                                       -->
                    <!-- ===================================================================== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${mavenCheckstylePluginVersion}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.beiter.michael.util</groupId>
                                <artifactId>build-tools</artifactId>
                                <version>${buildToolsVersion}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <configuration>
                                    <encoding>${project.build.sourceEncoding}</encoding>
                                    <consoleOutput>true</consoleOutput>
                                    <failOnViolation>true</failOnViolation>
                                    <failsOnError>true</failsOnError>
                                </configuration>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>find-bugs</id>
            <build>
                <plugins>
                    <!-- ===================================================================== -->
                    <!-- SCA: Findbugs                                                         -->
                    <!-- ===================================================================== -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>${findbugsMavenPluginVersion}</version>
                        <configuration>
                            <xmlOutput>true</xmlOutput>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                            <failOnError>true</failOnError>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.beiter.michael.util</groupId>
                                <artifactId>build-tools</artifactId>
                                <version>${buildToolsVersion}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pmd</id>
            <build>
                <plugins>
                    <!-- ================================================================= -->
                    <!-- SCA: PMD                                                          -->
                    <!-- ================================================================= -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>${mavenPmdPluginVersion}</version>
                        <configuration>
                            <!--<linkXref>true</linkXref>-->
                            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                            <minimumTokens>100</minimumTokens>
                            <targetJdk>${java.version}</targetJdk>
                            <rulesets>
                                <ruleset>pmd-rules.xml</ruleset>
                            </rulesets>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.beiter.michael.util</groupId>
                                <artifactId>build-tools</artifactId>
                                <version>${buildToolsVersion}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                    <goal>cpd-check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-tests</id>
            <properties>
                <build.profile.id>integration-test</build.profile.id>
                <skip.unit.tests>true</skip.unit.tests>
            </properties>
            <modules>
                <module>data-access-object</module>
                <module>client-api</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${build-helper-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>add-integration-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/integration-test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-integration-test-resources</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>add-test-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <filtering>true</filtering>
                                            <directory>src/integration-test/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>database</alias>
                                    <name>mysql:8.0.13</name>
                                    <run>
                                        <ports>
                                            <port>6603:3306</port>
                                        </ports>
                                        <env>
                                            <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                                            <MYSQL_DATABASE>tests_db</MYSQL_DATABASE>
                                            <MYSQL_USER>user</MYSQL_USER>
                                            <MYSQL_PASSWORD>password</MYSQL_PASSWORD>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>${basedir}/docker/scripts/:/docker-entrypoint-initdb.d/</volume>
                                            </bind>
                                        </volumes>
                                        <wait>
                                            <tcp>
                                                <ports>
                                                    <port>3306</port>
                                                </ports>
                                            </tcp>
                                            <log>port: 3306|Shutdown complete</log>
                                            <time>80000</time>
                                        </wait>
                                        <log>
                                            <prefix>DB</prefix>
                                            <color>yellow</color>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker:start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker:stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                            <excludes>
                                <exclude>**/IT*.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>